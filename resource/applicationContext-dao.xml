<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 	xmlns:p="http://www.springframework.org/schema/p"
 	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	                    http://www.springframework.org/schema/aop
         				http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
         				 
         				 	
	    <!-- 定义JdbcTemplate Bean(线程安全,执行底层sql语句) -->  
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource" ref="dataSource" />		<!-- 设置数据源 -->  
        <property name="queryTimeout" value="0" />  		<!-- 设置jdbcTemplate创建的statement查询数据时最大的超时时间,默认0 --> 
        <property name="fetchSize" value="0" />				<!-- 设置底层ResultSet每次从数据库返回的行数,默认0,Oracle默认100 -->  
        <property name="maxRows" value="0" />				<!-- 设置底层ResultSet从数据库返回的最大行数,默认0 -->
        <property name="ignoreWarnings" value="true" />		<!-- 是否忽略sql警告信息,默认true,false JdbcTemplate将会抛出SQLWarningException -->  
        <property name="nativeJdbcExtractor" ref="nativeJdbcExtractor" />
    </bean>
      
    <bean id="nativeJdbcExtractor" lazy-init="true"  
        class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" />  <!-- 定义DBCP数据源的JDBC本地对象抽取器 -->
          
     
    <bean id="simpleJdbcDao" class="edu.ahut.dao.base.SimpleJdbcDAO">   <!-- 定义封装了jdbc操作数据的dao -->
        <property name="jdbcTemplate" ref="jdbcTemplate" />  
    </bean>
     
    <!-- 定义了与实体相关的dao -->  
    <bean id="genericEntityDao" class="edu.ahut.dao.base.GenericEntityDAO"  
        scope="prototype" lazy-init="true">  
        <property name="sessionFactory">  
            <ref bean="sessionFactory" />  
        </property>  
    </bean>
      
    <!-- 定义了与实体无关的dao -->  
    <bean id="genericDao" class="edu.ahut.dao.base.GenericDAO">  
        <property name="sessionFactory">  
            <ref bean="sessionFactory" />  
        </property>  
    </bean>
      
    <!--使用泛型DAO作为抽象基类-->  
    <bean id="baseDAO" class="edu.ahut.dao.base.BaseDAOImpl"  
        abstract="true" depends-on="genericEntityDao,genericDao">  
        <property name="gedao">  
            <ref bean="genericEntityDao" />  
        </property>  
        <property name="gdao">  
            <ref bean="genericDao" />  
        </property>  
        <property name="sjdao">  
            <ref bean="simpleJdbcDao"/>  
        </property>  
    </bean>
	<import resource="applicationContext-dao-lm.xml"/>
	<import resource="applicationContext-dao-cl.xml"/>
	<import resource="applicationContext-dao-tc.xml"/>
	<import resource="applicationContext-dao-wc.xml"/>
	<import resource="applicationContext-dao-yq.xml"/>
	<import resource="applicationContext-dao-zd.xml"/>
		<import resource="applicationContext-dao-ldx.xml"/>
		
</beans>